name: Set GitHub Secrets

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'Target user/org:'
        default: 'joffrey-bion'
        required: false
      repo:
        description: 'Target repository:'
        required: true
      github-pat:
        description: 'Set GitHub Personal Access Token:'
        default: "false"
        required: false
      github-cr:
        description: 'Set GitHub Container Registry Token:'
        default: "false"
        required: false
      dockerhub:
        description: 'Set DockerHub secrets:'
        default: "false"
        required: false
      bintray:
        description: 'Set Bintray secrets:'
        default: "false"
        required: false
      sonatype:
        description: 'Set OSS Sonatype secrets:'
        default: "false"
        required: false
      gpg:
        description: 'Set GPG secrets:'
        default: "false"
        required: false
      digital-ocean:
        description: 'Set Digital Ocean token:'
        default: "false"
        required: false
      heroku:
        description: 'Set Heroku secrets:'
        default: "false"
        required: false
      gradle-portal:
        description: 'Set Gradle Plugin Portal secrets:'
        default: "false"
        required: false

env:
  SET_SECRETS_COMMAND: hildan/secrets-wizard set-github-secrets -u ${{ github.event.inputs.user }} -r ${{ github.event.inputs.repo }} -t ${{ secrets.GH_PAT }}

jobs:
  set-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Set GitHub Personal Access Token
        if: ${{ github.event.inputs.github-pat == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s GH_PAT=${{ secrets.GH_PAT }}

      - name: Set GitHub Container Registry Token
        if: ${{ github.event.inputs.github-cr == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s GH_CONTAINER_REGISTRY_TOKEN=${{ secrets.GH_CONTAINER_REGISTRY_TOKEN }}

      - name: Set DockerHub secrets
        if: ${{ github.event.inputs.dockerhub == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s DOCKERHUB_USER=${{ secrets.DOCKERHUB_USER }} -s DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Bintray secrets
        if: ${{ github.event.inputs.bintray == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s BINTRAY_USER=${{ secrets.BINTRAY_USER }} -s BINTRAY_KEY=${{ secrets.BINTRAY_KEY }}

      - name: Set OSS Sonatype secrets
        if: ${{ github.event.inputs.sonatype == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s OSSRH_USER_TOKEN=${{ secrets.OSSRH_USER_TOKEN }} -s OSSRH_KEY=${{ secrets.OSSRH_KEY }}

      # using env for multiline secret
      - name: Set GPG secrets
        if: ${{ github.event.inputs.gpg == 'true' }}
        env:
          GPG_SECRET_ASCII_ARMORED: ${{ secrets.GPG_SECRET_ASCII_ARMORED }}
        # first -e is for docker to pass the env to the container, second -e is the secrets-wizard option to read env
        run: docker run -e GPG_SECRET_ASCII_ARMORED ${{ env.SET_SECRETS_COMMAND }} -e GPG_SECRET_ASCII_ARMORED -s GPG_PASSWORD=${{ secrets.GPG_PASSWORD }}

      - name: Set Digital Ocean token
        if: ${{ github.event.inputs.digital-ocean == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s DIGITALOCEAN_ACCESS_TOKEN=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set Heroku secrets
        if: ${{ github.event.inputs.heroku == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s HEROKU_EMAIL=${{ secrets.HEROKU_EMAIL }} -s HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}

      - name: Set Gradle Plugin Portal secrets
        if: ${{ github.event.inputs.gradle-portal == 'true' }}
        run: docker run ${{ env.SET_SECRETS_COMMAND }} -s GRADLE_API_KEY=${{ secrets.GRADLE_API_KEY }} -s GRADLE_API_SECRET=${{ secrets.GRADLE_API_SECRET }}
